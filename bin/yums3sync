#!/usr/bin/env ruby

require 'optparse'
require 'yum_s3_sync'


options = {}
opt_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: yums3sync [options]'
  opts.separator ""
  opts.separator "Specific options:"

  opts.on('-s', '--source [SOURCE]', 'HTTP source URL') do |s|
    options[:source_base] = s
  end

  opts.on('-b', '--bucket [BUCKET]', 'Target bucket name') do |b|
    options[:target_bucket] = b
  end
  
  opts.on('-p', '--prefix PREFIX', 'Target bucket prefix') do |p|
    options[:target_base] = p
  end
  
  opts.on('-k', '--keep', 'Never overwrite exitant files') do |k|
    options[:keep] = true
  end
  
  opts.on('-n', '--dry-run', 'Don\'t make any changes') do |n|
    options[:dry_run] = true
  end
  
  opts.separator ""
  opts.separator "Authentication options:"
  options[:authentication] = false
  opts.on('-a', '--authentication', 'Allow authentication method to http(s)') do |a|
    options[:authentication] = true
  end
  options[:username] = ""
  opts.on('--username [USERNAME]', 'Username to use in the http(s)') do |u|
    options[:username] = u
  end
  options[:password] = ""
  opts.on('--password [PASSWORD]', 'Password to use in the https') do |pa|
    options[:password] = pa
  end
  opts.on('-d', '--disable', 'Disable SSL to check http(s)') do |a|
    options[:ssl] = true
  end
end

begin opt_parser.parse!
rescue OptionParser::InvalidOption => e
  puts e
  puts opt_parser
  exit 1
end

if !options[:source_base] || !options[:target_bucket] || !options[:target_base]
  puts opt_parser
  exit 1
end

if options[:authentication] 
  if (options[:username].empty? or options[:password].empty?)
    puts opt_parser
    exit 1
  end
else
  options.delete(:username)
  options.delete(:password)
end

repo_syncer = YumS3Sync::RepoSyncer.new(options[:source_base], options[:target_bucket], options[:target_base], options)

begin
  repo_syncer.sync
rescue StandardError => e
  puts e.message
  exit 1
end
